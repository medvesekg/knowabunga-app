name: Deploy Stage

on:
  push:
    branches:
      - stage

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: data
        run: pnpm install

      - name: Test data
        working-directory: data
        run: pnpm jest

  deploy_cdk:
    runs-on: ubuntu-latest
    needs: test

    outputs:
      api_url: ${{ steps.deploy.outputs.api_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up AWS CDK
        run: |
          pnpm install -g aws-cdk

      - name: Install dependencies
        working-directory: aws
        run: |
          pnpm install

      - name: Bootstrap CDK
        run: cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION
        env:
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID_STAGE }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}

      - name: Deploy CDK stack
        id: deploy
        working-directory: aws
        run: |
          output=$(pnpm deploy:stage --require-approval never)
          echo "$output"
          api_url=$(echo "$output" | grep 'ApiUrl' | awk -F ' ' '{print $3}')
          echo "api_url=$api_url" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID_STAGE }}
          PRIVATE_VAPID_KEY: ${{ secrets.PRIVATE_VAPID_KEY_STAGE }}
          PUBLIC_VAPID_KEY: ${{ secrets.PUBLIC_VAPID_KEY_STAGE }}
          LEET_API_TOKEN: ${{ secrets.LEET_API_TOKEN }}

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: deploy_cdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: frontend
        run: |
          pnpm install

      - name: Build app
        working-directory: frontend
        run: |
          pnpm vite build
        env:
          VITE_API_URL: ${{ needs.deploy_cdk.outputs.api_url }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID_STAGE }}
          VITE_PUBLIC_VAPID_KEY: ${{ secrets.PUBLIC_VAPID_KEY_STAGE }}
          VITE_ENV: "dev"

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: "./frontend/dist"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STAGE }}
